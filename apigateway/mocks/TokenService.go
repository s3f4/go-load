// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	http "net/http"

	jwt "github.com/dgrijalva/jwt-go"
	mock "github.com/stretchr/testify/mock"

	models "github.com/s3f4/go-load/apigateway/models"
)

// TokenService is an autogenerated mock type for the TokenService type
type TokenService struct {
	mock.Mock
}

// CreateToken provides a mock function with given fields: r, user
func (_m *TokenService) CreateToken(r *http.Request, user *models.User) (*models.AccessToken, *models.RefreshToken, error) {
	ret := _m.Called(r, user)

	var r0 *models.AccessToken
	if rf, ok := ret.Get(0).(func(*http.Request, *models.User) *models.AccessToken); ok {
		r0 = rf(r, user)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.AccessToken)
		}
	}

	var r1 *models.RefreshToken
	if rf, ok := ret.Get(1).(func(*http.Request, *models.User) *models.RefreshToken); ok {
		r1 = rf(r, user)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*models.RefreshToken)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(*http.Request, *models.User) error); ok {
		r2 = rf(r, user)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GetDetailsFromToken provides a mock function with given fields: r, from
func (_m *TokenService) GetDetailsFromToken(r *http.Request, from string) (*models.Details, error) {
	ret := _m.Called(r, from)

	var r0 *models.Details
	if rf, ok := ret.Get(0).(func(*http.Request, string) *models.Details); ok {
		r0 = rf(r, from)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Details)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*http.Request, string) error); ok {
		r1 = rf(r, from)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TokenFromCookie provides a mock function with given fields: r, key
func (_m *TokenService) TokenFromCookie(r *http.Request, key string) string {
	ret := _m.Called(r, key)

	var r0 string
	if rf, ok := ret.Get(0).(func(*http.Request, string) string); ok {
		r0 = rf(r, key)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// TokenFromHeader provides a mock function with given fields: r
func (_m *TokenService) TokenFromHeader(r *http.Request) string {
	ret := _m.Called(r)

	var r0 string
	if rf, ok := ret.Get(0).(func(*http.Request) string); ok {
		r0 = rf(r)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// VerifyToken provides a mock function with given fields: r, key
func (_m *TokenService) VerifyToken(r *http.Request, key string) (*jwt.Token, error) {
	ret := _m.Called(r, key)

	var r0 *jwt.Token
	if rf, ok := ret.Get(0).(func(*http.Request, string) *jwt.Token); ok {
		r0 = rf(r, key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*jwt.Token)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*http.Request, string) error); ok {
		r1 = rf(r, key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

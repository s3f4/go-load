version: "2.3"
services:
  api-gateway:
    image: api-gateway
    restart: always
    build:
      context: ./api-gateway
      dockerfile: Dockerfile.dev

  event-handler:
    image: event-handler
    restart: always
    build:
      context: ./event-handler
      dockerfile: Dockerfile.dev

  web:
    image: web
    restart: always
    build:
      context: ./web
      dockerfile: Dockerfile.dev
    ports:
      - 3000:3000
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - "./web:/app"
      - "/app/node_modules"
    stdin_open: true

  worker:
    image: worker
    restart: always
    build:
      context: ./worker
      dockerfile: Dockerfile.dev
    volumes:
      - ./worker:/go/src/github.com/s3f4/go-load/worker

  timeDB:
    image: timescale/timescaledb:latest-pg12
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=timescaledb_example
    ports:
      - 5432:5432

  queue:
    image: rabbitmq:3-management
    restart: always
    ports:
      - 8080:15672
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password

  pgAdmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - 8081:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=test@test.com
      - PGADMIN_DEFAULT_PASSWORD=123456

  mysql:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: mysql_example
